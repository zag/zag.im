=begin pod :pubdate('2011-01-09 10:00:00') :tags<perl6 book perl>
=NAME Все о Perl 6: Подпрограммы и сигнатуры

=begin DESCRIPTION

=for Image :align("left") :preview
cover_draft.jpg

I<Подпрограмма> представляет собой участок кода, выполняющий определенную задачу. Она может оперировать передаваемыми ей при вызове данными I<(аргументами)> и может производить результаты I<(возвращаемые значения)>. I<Сигнатурой> подпрограммы является описание всех передаваемых при вызове аргументов и любых возвращаемых значений.

Первая глава демонстрирует простые подпрограммы. Операторы, описанные во второй главе, являются подпрограммами, которые Perl 6 обрабатывает необычным способом. Однако, они будут описаны поверхностно насколько это возможно.


=end DESCRIPTION

I<Подпрограмма> представляет собой участок кода, выполняющий определенную задачу. Она может оперировать передаваемыми ей при вызове данными I<(аргументами)> и может производить результаты I<(возвращаемые значения)>. I<Сигнатурой> подпрограммы является описание всех передаваемых при вызове аргументов и любых возвращаемых значений.

Первая глава демонстрирует простые подпрограммы. Операторы, описанные во второй главе, являются подпрограммами, которые Perl 6 обрабатывает необычным способом. Однако, они будут описаны поверхностно насколько это возможно.


=head1 Определение подпрограмм

Определение подпрограммы состоит из нескольких частей. Сперва следует декларатор C<sub>, указывающий начало определения подпрограммы. Затем - необязательное имя и необязательная сигнатура. И наконец - тело подпрограммы: ограниченный фигурными скобками блок кода. Этот код выполняется каждый раз при вызове подпрограммы.

К примеру, в коде:

=begin code

    sub panic() {
        say "Oh no! Something has gone most terribly wrong!";
    }

=end code

... определена подпрограмма с именем C<panic>. Ее сигнатура отсутствует, а тело состоит их единственного оператора C<say>.

По умолчанию, подпрограммы ограничена областью лексической видимости, как и любая переменная объявленная с помощью C<my>. Это подразумевает, что подпрограмма может быть вызвана, только в границах той области видимости I<( Как правило это блок кода )>, внутри которой она была определена. Чтобы подпрограмма стала доступной внутри всего пакета используется декларатор I<(ключевое слово)> C<our>:

=begin code
    {
        our sub eat() {
            say "om nom nom";
        }

        sub drink() {
            say "glug glug";
        }
    }

    eat();    # om nom nom
    drink();  # fails, can't drink outside of the block
=end code

L<Далее ...|http://zag.ru/perl6-book/compiled/ru-perl6-book-html-chunk/ch04.html>

Эта статья входит в книгу "L<Все о Perl 6|http://zag.ru/perl6-book/>".

=for Image :align("left") :preview
cover_draft.jpg

=end pod
